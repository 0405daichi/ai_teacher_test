<!-- app/views/app/_instagram.html.erb -->

<!-- インスタグラムモーダル -->
<div class="modal fade instagramModal" id="instagram" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-fullscreen modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" id="closeSearch" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="position: absolute; top: 10px; right: 10px;"></button>
      </div>
      <div class="modal-body">
        <% if user_signed_in? %>
        <div class="top-container">
          <div class="top-circles">
            <!-- こちらに円を追加します -->  
            <div class="circle1 circle" data-category="all"></div>
            <div class="circle2 circle" data-category="user"></div>
            <div class="circle3 circle" data-category="liked"></div>
            <div class="circle4 circle" data-category="bookmarked"></div>
            <div class="circle"></div>
            <div class="circle"></div>
            <div class="circle"></div>
            <div class="circle"></div>
            <div class="circle"></div>
          </div>
        </div>
        <div class="cards-panel">
          <div class="cards all-cards" id="all-cards" style="display: block;">
              <!-- 全てのカード -->
              <% all_cards.each do |card| %>
                <div class="card">
                    <div class="card-id" style="display:none;"><%= card.id %></div>
                    <div class="card-answer" style="display:none;"><%= card.answer.content %></div>
                    <div class="card-body">
                        <%= card.content %>
                    </div>
                    <div class="like">
                      <% if !card.likes.find_by(user: current_user) %>
                        <%= link_to like_question_path(card.id), method: :post, remote: true, data: {"turbolinks" => false} do %>
                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="-2.5 -2.5 139.99 139.99" height="139.99" width="139.99"><g id="heart--reward-social-rating-media-heart-it-like-favorite-love"><path id="Vector" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" d="M67.53453278571429 119.39479814285716 14.749875192857145 71.58297930714286c-28.687399850000002 -28.687399850000002 13.482994042857143 -83.76708028571429 52.78465759285715 -39.20610991428571 39.30137428571428 -44.560970371428574 81.28133585714286 10.710010178571428 52.78494685714286 39.20610991428571L67.53453278571429 119.39479814285716Z" stroke-width="2"></path></g></svg>
                        <% end %>
                      <% else %>
                        <%= link_to unlike_question_path(card.id), method: :delete, remote: true, data: {"turbolinks" => false} do %>
                          <svg xmlns="http://www.w3.org/2000/svg" fill="red" viewBox="-2.5 -2.5 139.99 139.99" height="139.99" width="139.99"><g id="heart--reward-social-rating-media-heart-it-like-favorite-love"><path id="Vector" stroke="#000000" stroke-linecap="round" stroke-linejoin="round" d="M67.53453278571429 119.39479814285716 14.749875192857145 71.58297930714286c-28.687399850000002 -28.687399850000002 13.482994042857143 -83.76708028571429 52.78465759285715 -39.20610991428571 39.30137428571428 -44.560970371428574 81.28133585714286 10.710010178571428 52.78494685714286 39.20610991428571L67.53453278571429 119.39479814285716Z" stroke-width="0"></path></g></svg>
                        <% end %>
                      <% end %>
                    </div>
                </div>
              <% end %>
          </div>

            <% if user_questions.nil? %>
              <div class="cards user-cards" id="user-cards" style="display:none;">
                <!-- ユーザーのカード -->
                <% user_questions.each do |card| %>
                  <div class="card">
                      <div class="card-answer" style="display:none;"><%= card.answer.content %></div>
                      <div class="card-body">
                          <%= card.content %> <!-- 質問の内容を表示 -->
                      </div>
                      <div class="like">
                          ❤️
                      </div>
                  </div>
                <% end %>
              </div>
            <% end %>
            
            <% if user_likes.nil? %>
              <div class="cards user-liked-cards" id="user-liked-cards" style="display:none;">
                <!-- ユーザーがいいねしたカード -->
                <% user_likes.each do |card| %>
                  <div class="card">
                      <div class="card-answer" style="display:none;"><%= card.answer.content %></div>
                      <div class="card-body">
                          <%= card.content %> <!-- 質問の内容を表示 -->
                      </div>
                      <div class="like">
                          ❤️
                      </div>
                  </div>
                <% end %>
              </div>
            <% end %>
            
            <% if user_bookmarks.nil? %>
              <div class="cards user-bookmarked-cards" id="user-bookmarked-cards" style="display:none;">
                <!-- ユーザーが保存したカード -->
                <% user_bookmarks.each do |card| %>
                  <div class="card">
                      <div class="card-answer" style="display:none;"><%= card.answer.content %></div>
                      <div class="card-body">
                          <%= card.content %> <!-- 質問の内容を表示 -->
                      </div>
                      <div class="like">
                          ❤️
                      </div>
                  </div>
                <% end %>
              </div>
            <% end %>
        </div>
        <% else %>
          <%= render 'shared/auth_buttons', text: "自分がした質問や保存した質問を閲覧できます。" %>
        <% end %>
      </div>
    </div>
  </div>
</div>

<style>
.top-container {
    display: flex;
    align-items: center;
    justify-content: center;  /* 追加: 子要素を左寄せ */
    margin: 0 0 30px 0;
}

.top-circles {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    scroll-padding: 50%;
    scrollbar-width: none;
    -ms-overflow-style: none;
    margin-right: 10px;  /* 追加: add-btnとの間隔 */
    
    &::-webkit-scrollbar {
        display: none;
    }
}

.circle {
    flex: 0 0 auto;
    width: 100px;
    height: 100px;
    background-color: transparent;
    border: 2px solid white;
    border-radius: 50%;
    margin-right: 10px;
    scroll-snap-align: top;
    transition: background-color 0.3s ease;
    cursor: pointer;
}

.add-btn {
    flex: 0 0 auto;
    width: 100px;
    height: 100px;
    background-color: black;
    border-radius: 50%;
    margin-right: 10px;
    cursor: pointer;
    font-size: 24px;
    font-weight: bold;
    color: white;
    text-align: center;
}

.cards-panel {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-flow: column;
}

.cards .like {
    position: absolute;
    bottom: 10px;
    right: 10px;
    color: inherit; /* like の色をcardの文字色に合わせます */
}

/* デフォルトのカードスタイル */
.cards .card {
  height: 500px;
  width: 500px;
  background-color: transparent; /* 既定の背景色 */
  color: white;
  transition: background-color 0.3s ease; /* 背景色の変更を滑らかに */
}

/* カードにホバー（PC）またはタッチ（スマホ）したときのスタイル */
.cards .card:hover, 
.cards .card:active {
    background-color: white; /* 背景を透明に */
    color: black;
}

.card-body {
  display: flex;
  justify-content: center;
  align-items: center;
}

.heart {
  fill: red;
}

</style>

<script>
document.addEventListener('turbolinks:load', () => {
  const circlesContainer = document.querySelector('.top-circles');
  const allCardsElement = document.getElementById('all-cards');
  const userCardsElement = document.getElementById('user-cards');
  const likedCardsElement = document.getElementById('user-liked-cards');
  const bookmarkedCardsElement = document.getElementById('user-bookmarked-cards');
  const circles = document.querySelectorAll('.circle');

  // クリックされた円によって表示するカードを切り替える
  circles.forEach(circle => {
    circle.addEventListener('click', (e) => {
      // Reset the background color for all circles
      circles.forEach(c => {
        c.style.backgroundColor = 'transparent';
        c.style.color = 'white';
      });

      // Change the background color of the clicked circle
      e.target.style.backgroundColor = 'white';
      e.target.style.color = 'black';

      // Hide all cards
      [allCardsElement, userCardsElement, likedCardsElement, bookmarkedCardsElement].forEach(el => {
        if (el) {
          el.style.display = 'none';
        }
      });

      // Show the corresponding cards
      switch (e.target.dataset.category) {
        case 'all':
          if (allCardsElement) allCardsElement.style.display = 'block';
          break;
        case 'user':
          if (userCardsElement) userCardsElement.style.display = 'block';
          break;
        case 'liked':
          if (likedCardsElement) likedCardsElement.style.display = 'block';
          break;
        case 'bookmarked':
          if (bookmarkedCardsElement) bookmarkedCardsElement.style.display = 'block';
          break;
      }
    });
  });

  // ページがロードされたら全てのカードを表示
  if (allCardsElement) allCardsElement.style.display = 'block';
});

</script>
